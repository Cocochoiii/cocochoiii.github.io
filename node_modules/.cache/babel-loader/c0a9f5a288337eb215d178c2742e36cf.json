{"ast":null,"code":"var _jsxFileName = \"/Users/cocochoi/Downloads/coco-portfolio 5/src/components/Work.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"animate.css\";\nimport TrackVisibility from \"react-on-screen\";\nimport ubiLogo from \"../assets/img/ubiwell-logo.svg\";\nimport audiLogo from \"../assets/img/audi-logo.svg\";\nimport marsLogo from \"../assets/img/mars-logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst jobs = [{\n  id: \"ubi\",\n  company: \"UbiWell Lab\",\n  role: \"Software Engineering Intern\",\n  location: \"Boston, MA\",\n  dates: \"May 2025 – Oct 2025\",\n  logo: ubiLogo,\n  bullets: [\"Designed backend services with Python/Django + PostgreSQL/MongoDB; REST APIs processed 2.5M+ health datapoints with <200ms latency and 99.9% uptime.\", \"Built 100+ real-time dashboards (React, TypeScript, D3.js, Plotly) for 1,000+ daily research users.\", \"Automated data pipelines (500+ hours of monitoring data); integrated Kafka for real-time streams.\", \"Extended platform to iOS (Swift/SwiftUI/Core Data; ML via TensorFlow Lite) with 99.7% reliability on 10k+ daily sensor readings.\", \"Led code reviews & TDD (pytest/Jest/XCTest) to ~92% coverage; 200+ tests reduced production bugs by ~80%.\"],\n  tags: [\"Python\", \"Django\", \"PostgreSQL\", \"MongoDB\", \"React\", \"TypeScript\", \"D3\", \"Plotly\", \"Kafka\", \"Swift\", \"TFLite\", \"TDD\"]\n}, {\n  id: \"audi\",\n  company: \"Audi\",\n  role: \"Innovation Data Engineer\",\n  location: \"Beijing, China\",\n  dates: \"Jan 2023 – Aug 2024\",\n  logo: audiLogo,\n  bullets: [\"Java Spring Boot & Python Flask microservices processing 500GB+/day telemetry with 99.9% uptime; Kafka for 20k+ IoT sensors.\", \"ETL with Airflow/Pandas/NumPy; Spark Streaming for sub-second analytics (-40% processing time).\", \"Snowflake + dbt data warehouse; optimized SQL (-60% latency) and built 15+ mining solutions (PySpark/SQL) improving retention by 25%.\", \"CI/CD with Docker/Kubernetes and GitHub Actions; ~90% test coverage; Agile/Scrum collaboration.\"],\n  tags: [\"Java\", \"Spring Boot\", \"Flask\", \"Kafka\", \"Airflow\", \"Spark\", \"Snowflake\", \"dbt\", \"PySpark\", \"Docker\", \"Kubernetes\", \"GitHub Actions\"]\n}, {\n  id: \"mars\",\n  company: \"Mars Inc.\",\n  role: \"Full-Stack SWE Intern\",\n  location: \"Hong Kong\",\n  dates: \"Feb 2022 – Dec 2022\",\n  logo: marsLogo,\n  bullets: [\"React Native app (custom hooks/context); Node.js/Express microservices; OAuth2/JWT with RBAC for 5k+ daily users.\", \"Realtime messaging via Socket.IO & Redis pub/sub; RabbitMQ for reliable order events (event sourcing).\", \"MongoDB geospatial + compound indexes reduced search latency by ~65%; Agile with Git.\"],\n  tags: [\"React Native\", \"Node.js\", \"Express\", \"OAuth2\", \"JWT\", \"Socket.IO\", \"Redis\", \"RabbitMQ\", \"MongoDB\", \"Mongoose\"]\n}];\nexport const Work = () => {\n  _s();\n\n  const [activeIdx, setActiveIdx] = useState(0);\n  const [openId, setOpenId] = useState(jobs[0].id);\n  const containerRef = useRef(null);\n  const pathRef = useRef(null);\n  const [pathLen, setPathLen] = useState(1);\n  const [tilt, setTilt] = useState({}); // per-card tilt { id: { rx, ry } }\n  // Measure path length once\n\n  useEffect(() => {\n    if (pathRef.current && pathRef.current.getTotalLength) {\n      setPathLen(pathRef.current.getTotalLength());\n    }\n  }, []); // Highlight the node nearest viewport center on scroll/resize\n\n  useEffect(() => {\n    const el = containerRef.current;\n    if (!el) return;\n\n    const handler = () => {\n      const centerY = window.innerHeight / 2;\n      let best = 0;\n      let bestDist = Infinity;\n      const nodes = el.querySelectorAll(\"[data-work-index]\");\n      nodes.forEach((n, idx) => {\n        const r = n.getBoundingClientRect();\n        const mid = (r.top + r.bottom) / 2;\n        const d = Math.abs(mid - centerY);\n\n        if (d < bestDist) {\n          bestDist = d;\n          best = idx;\n        }\n      });\n      setActiveIdx(best);\n    };\n\n    handler();\n    window.addEventListener(\"scroll\", handler, {\n      passive: true\n    });\n    window.addEventListener(\"resize\", handler);\n    return () => {\n      window.removeEventListener(\"scroll\", handler);\n      window.removeEventListener(\"resize\", handler);\n    };\n  }, []);\n  const progress = jobs.length <= 1 ? 1 : activeIdx / (jobs.length - 1);\n\n  const onMouseMove = (id, e) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const px = (e.clientX - rect.left) / rect.width; // 0..1\n\n    const py = (e.clientY - rect.top) / rect.height; // 0..1\n\n    const ry = (px - 0.5) * 8;\n    const rx = -(py - 0.5) * 8;\n    setTilt(t => ({ ...t,\n      [id]: {\n        rx,\n        ry\n      }\n    }));\n  };\n\n  const onMouseLeave = id => setTilt(t => ({ ...t,\n    [id]: {\n      rx: 0,\n      ry: 0\n    }\n  }));\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"work\",\n    id: \"work\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          size: 12,\n          children: /*#__PURE__*/_jsxDEV(TrackVisibility, {\n            children: _ref => {\n              let {\n                isVisible\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isVisible ? \"animate__animated animate__fadeIn\" : \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Work\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Scroll the path; click (or press Enter) to expand. Hover for a subtle tilt.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"work-timeline\",\n                  ref: containerRef,\n                  tabIndex: 0,\n                  onKeyDown: e => {\n                    if (e.key === \"ArrowDown\") {\n                      setActiveIdx(i => Math.min(i + 1, jobs.length - 1));\n                      e.preventDefault();\n                    }\n\n                    if (e.key === \"ArrowUp\") {\n                      setActiveIdx(i => Math.max(i - 1, 0));\n                      e.preventDefault();\n                    }\n\n                    if (e.key === \"Enter\") {\n                      const id = jobs[activeIdx].id;\n                      setOpenId(cur => cur === id ? \"\" : id);\n                    }\n                  },\n                  \"aria-label\": \"Work experience timeline\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    className: \"work-svg\",\n                    width: \"80\",\n                    height: \"100%\",\n                    viewBox: \"0 0 80 1200\",\n                    preserveAspectRatio: \"none\",\n                    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                      ref: pathRef,\n                      className: \"work-path\",\n                      d: \"M40 10 C 40 10, 40 10, 40 1180\",\n                      strokeDasharray: pathLen,\n                      strokeDashoffset: pathLen - pathLen * progress\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 45\n                    }, this), jobs.map((_, i) => /*#__PURE__*/_jsxDEV(\"circle\", {\n                      className: \"work-dot \" + (i <= activeIdx ? \"active\" : \"\"),\n                      cx: \"40\",\n                      cy: 80 + i * 220,\n                      r: \"7\"\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 49\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"work-items\",\n                    children: jobs.map((j, i) => {\n                      const open = openId === j.id;\n                      const rot = tilt[j.id] || {\n                        rx: 0,\n                        ry: 0\n                      };\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        \"data-work-index\": i,\n                        className: \"work-node \" + (i === activeIdx ? \"active \" : \"\") + (open ? \"open\" : \"\"),\n                        onClick: () => setOpenId(open ? \"\" : j.id),\n                        onMouseMove: e => onMouseMove(j.id, e),\n                        onMouseLeave: () => onMouseLeave(j.id),\n                        style: {\n                          transform: `translateY(0) rotateX(${rot.rx}deg) rotateY(${rot.ry}deg)`\n                        },\n                        role: \"button\",\n                        tabIndex: 0,\n                        \"aria-expanded\": open,\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"work-row\",\n                          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                            src: j.logo,\n                            alt: \"\",\n                            className: \"work-logo\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 184,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"work-meta\",\n                            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                              children: [j.company, \" \\u2014 \", j.role]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 186,\n                              columnNumber: 65\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"work-sub\",\n                              children: [j.location, \" \\u2022 \", j.dates]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 187,\n                              columnNumber: 65\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"work-tags\",\n                              children: j.tags.map(t => /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"chip\",\n                                children: t\n                              }, t, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 190,\n                                columnNumber: 73\n                              }, this))\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 188,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 185,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 183,\n                          columnNumber: 57\n                        }, this), open && /*#__PURE__*/_jsxDEV(\"ul\", {\n                          className: \"work-details\",\n                          children: j.bullets.map((b, k) => /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: b\n                          }, k, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 199,\n                            columnNumber: 69\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 197,\n                          columnNumber: 61\n                        }, this)]\n                      }, j.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 53\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Work, \"H9xzBeV9+z/Y9J0O5CIJTJfiI5M=\");\n\n_c = Work;\n\nvar _c;\n\n$RefreshReg$(_c, \"Work\");","map":{"version":3,"names":["useEffect","useRef","useState","Container","Row","Col","TrackVisibility","ubiLogo","audiLogo","marsLogo","jobs","id","company","role","location","dates","logo","bullets","tags","Work","activeIdx","setActiveIdx","openId","setOpenId","containerRef","pathRef","pathLen","setPathLen","tilt","setTilt","current","getTotalLength","el","handler","centerY","window","innerHeight","best","bestDist","Infinity","nodes","querySelectorAll","forEach","n","idx","r","getBoundingClientRect","mid","top","bottom","d","Math","abs","addEventListener","passive","removeEventListener","progress","length","onMouseMove","e","rect","currentTarget","px","clientX","left","width","py","clientY","height","ry","rx","t","onMouseLeave","isVisible","key","i","min","preventDefault","max","cur","map","_","j","open","rot","transform","b","k"],"sources":["/Users/cocochoi/Downloads/coco-portfolio 5/src/components/Work.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"animate.css\";\nimport TrackVisibility from \"react-on-screen\";\n\nimport ubiLogo from \"../assets/img/ubiwell-logo.svg\";\nimport audiLogo from \"../assets/img/audi-logo.svg\";\nimport marsLogo from \"../assets/img/mars-logo.svg\";\n\nconst jobs = [\n    {\n        id: \"ubi\",\n        company: \"UbiWell Lab\",\n        role: \"Software Engineering Intern\",\n        location: \"Boston, MA\",\n        dates: \"May 2025 – Oct 2025\",\n        logo: ubiLogo,\n        bullets: [\n            \"Designed backend services with Python/Django + PostgreSQL/MongoDB; REST APIs processed 2.5M+ health datapoints with <200ms latency and 99.9% uptime.\",\n            \"Built 100+ real-time dashboards (React, TypeScript, D3.js, Plotly) for 1,000+ daily research users.\",\n            \"Automated data pipelines (500+ hours of monitoring data); integrated Kafka for real-time streams.\",\n            \"Extended platform to iOS (Swift/SwiftUI/Core Data; ML via TensorFlow Lite) with 99.7% reliability on 10k+ daily sensor readings.\",\n            \"Led code reviews & TDD (pytest/Jest/XCTest) to ~92% coverage; 200+ tests reduced production bugs by ~80%.\"\n        ],\n        tags: [\"Python\",\"Django\",\"PostgreSQL\",\"MongoDB\",\"React\",\"TypeScript\",\"D3\",\"Plotly\",\"Kafka\",\"Swift\",\"TFLite\",\"TDD\"]\n    },\n    {\n        id: \"audi\",\n        company: \"Audi\",\n        role: \"Innovation Data Engineer\",\n        location: \"Beijing, China\",\n        dates: \"Jan 2023 – Aug 2024\",\n        logo: audiLogo,\n        bullets: [\n            \"Java Spring Boot & Python Flask microservices processing 500GB+/day telemetry with 99.9% uptime; Kafka for 20k+ IoT sensors.\",\n            \"ETL with Airflow/Pandas/NumPy; Spark Streaming for sub-second analytics (-40% processing time).\",\n            \"Snowflake + dbt data warehouse; optimized SQL (-60% latency) and built 15+ mining solutions (PySpark/SQL) improving retention by 25%.\",\n            \"CI/CD with Docker/Kubernetes and GitHub Actions; ~90% test coverage; Agile/Scrum collaboration.\"\n        ],\n        tags: [\"Java\",\"Spring Boot\",\"Flask\",\"Kafka\",\"Airflow\",\"Spark\",\"Snowflake\",\"dbt\",\"PySpark\",\"Docker\",\"Kubernetes\",\"GitHub Actions\"]\n    },\n    {\n        id: \"mars\",\n        company: \"Mars Inc.\",\n        role: \"Full-Stack SWE Intern\",\n        location: \"Hong Kong\",\n        dates: \"Feb 2022 – Dec 2022\",\n        logo: marsLogo,\n        bullets: [\n            \"React Native app (custom hooks/context); Node.js/Express microservices; OAuth2/JWT with RBAC for 5k+ daily users.\",\n            \"Realtime messaging via Socket.IO & Redis pub/sub; RabbitMQ for reliable order events (event sourcing).\",\n            \"MongoDB geospatial + compound indexes reduced search latency by ~65%; Agile with Git.\"\n        ],\n        tags: [\"React Native\",\"Node.js\",\"Express\",\"OAuth2\",\"JWT\",\"Socket.IO\",\"Redis\",\"RabbitMQ\",\"MongoDB\",\"Mongoose\"]\n    }\n];\n\nexport const Work = () => {\n    const [activeIdx, setActiveIdx] = useState(0);\n    const [openId, setOpenId] = useState(jobs[0].id);\n    const containerRef = useRef(null);\n    const pathRef = useRef(null);\n    const [pathLen, setPathLen] = useState(1);\n    const [tilt, setTilt] = useState({}); // per-card tilt { id: { rx, ry } }\n\n    // Measure path length once\n    useEffect(() => {\n        if (pathRef.current && pathRef.current.getTotalLength) {\n            setPathLen(pathRef.current.getTotalLength());\n        }\n    }, []);\n\n    // Highlight the node nearest viewport center on scroll/resize\n    useEffect(() => {\n        const el = containerRef.current;\n        if (!el) return;\n        const handler = () => {\n            const centerY = window.innerHeight / 2;\n            let best = 0;\n            let bestDist = Infinity;\n            const nodes = el.querySelectorAll(\"[data-work-index]\");\n            nodes.forEach((n, idx) => {\n                const r = n.getBoundingClientRect();\n                const mid = (r.top + r.bottom) / 2;\n                const d = Math.abs(mid - centerY);\n                if (d < bestDist) {\n                    bestDist = d;\n                    best = idx;\n                }\n            });\n            setActiveIdx(best);\n        };\n        handler();\n        window.addEventListener(\"scroll\", handler, { passive: true });\n        window.addEventListener(\"resize\", handler);\n        return () => {\n            window.removeEventListener(\"scroll\", handler);\n            window.removeEventListener(\"resize\", handler);\n        };\n    }, []);\n\n    const progress = jobs.length <= 1 ? 1 : activeIdx / (jobs.length - 1);\n\n    const onMouseMove = (id, e) => {\n        const rect = e.currentTarget.getBoundingClientRect();\n        const px = (e.clientX - rect.left) / rect.width;  // 0..1\n        const py = (e.clientY - rect.top) / rect.height;  // 0..1\n        const ry = (px - 0.5) * 8;\n        const rx = -(py - 0.5) * 8;\n        setTilt((t) => ({ ...t, [id]: { rx, ry } }));\n    };\n    const onMouseLeave = (id) => setTilt((t) => ({ ...t, [id]: { rx: 0, ry: 0 } }));\n\n    return (\n        <section className=\"work\" id=\"work\">\n            <Container>\n                <Row>\n                    <Col size={12}>\n                        <TrackVisibility>\n                            {({ isVisible }) => (\n                                <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\n                                    <h2>Work</h2>\n                                    <p>Scroll the path; click (or press Enter) to expand. Hover for a subtle tilt.</p>\n\n                                    <div\n                                        className=\"work-timeline\"\n                                        ref={containerRef}\n                                        tabIndex={0}\n                                        onKeyDown={(e) => {\n                                            if (e.key === \"ArrowDown\") {\n                                                setActiveIdx((i) => Math.min(i + 1, jobs.length - 1));\n                                                e.preventDefault();\n                                            }\n                                            if (e.key === \"ArrowUp\") {\n                                                setActiveIdx((i) => Math.max(i - 1, 0));\n                                                e.preventDefault();\n                                            }\n                                            if (e.key === \"Enter\") {\n                                                const id = jobs[activeIdx].id;\n                                                setOpenId((cur) => (cur === id ? \"\" : id));\n                                            }\n                                        }}\n                                        aria-label=\"Work experience timeline\"\n                                    >\n                                        {/* Left SVG path */}\n                                        <svg className=\"work-svg\" width=\"80\" height=\"100%\" viewBox=\"0 0 80 1200\" preserveAspectRatio=\"none\">\n                                            <path\n                                                ref={pathRef}\n                                                className=\"work-path\"\n                                                d=\"M40 10 C 40 10, 40 10, 40 1180\"\n                                                strokeDasharray={pathLen}\n                                                strokeDashoffset={pathLen - pathLen * progress}\n                                            />\n                                            {jobs.map((_, i) => (\n                                                <circle\n                                                    key={i}\n                                                    className={\"work-dot \" + (i <= activeIdx ? \"active\" : \"\")}\n                                                    cx=\"40\"\n                                                    cy={80 + i * 220}\n                                                    r=\"7\"\n                                                />\n                                            ))}\n                                        </svg>\n\n                                        {/* Right content nodes */}\n                                        <div className=\"work-items\">\n                                            {jobs.map((j, i) => {\n                                                const open = openId === j.id;\n                                                const rot = tilt[j.id] || { rx: 0, ry: 0 };\n                                                return (\n                                                    <div\n                                                        key={j.id}\n                                                        data-work-index={i}\n                                                        className={\"work-node \" + (i === activeIdx ? \"active \" : \"\") + (open ? \"open\" : \"\")}\n                                                        onClick={() => setOpenId(open ? \"\" : j.id)}\n                                                        onMouseMove={(e) => onMouseMove(j.id, e)}\n                                                        onMouseLeave={() => onMouseLeave(j.id)}\n                                                        style={{ transform: `translateY(0) rotateX(${rot.rx}deg) rotateY(${rot.ry}deg)` }}\n                                                        role=\"button\"\n                                                        tabIndex={0}\n                                                        aria-expanded={open}\n                                                    >\n                                                        <div className=\"work-row\">\n                                                            <img src={j.logo} alt=\"\" className=\"work-logo\" />\n                                                            <div className=\"work-meta\">\n                                                                <h4>{j.company} — {j.role}</h4>\n                                                                <span className=\"work-sub\">{j.location} • {j.dates}</span>\n                                                                <div className=\"work-tags\">\n                                                                    {j.tags.map((t) => (\n                                                                        <span key={t} className=\"chip\">{t}</span>\n                                                                    ))}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n\n                                                        {open && (\n                                                            <ul className=\"work-details\">\n                                                                {j.bullets.map((b, k) => (\n                                                                    <li key={k}>{b}</li>\n                                                                ))}\n                                                            </ul>\n                                                        )}\n                                                    </div>\n                                                );\n                                            })}\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                        </TrackVisibility>\n                    </Col>\n                </Row>\n            </Container>\n        </section>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}